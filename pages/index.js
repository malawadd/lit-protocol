import { useState, useContext } from 'react'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import LitJsSdk from 'lit-js-sdk'
import Cookies from 'js-cookie'
import { UUIDContext } from '../context'

const accessControlConditions = [
  {
    contractAddress: '0x8991f160A6e0D10803201A8dDA333CB60C350A0c',
    standardContractType: 'ERC721',
    chain: 'mumbai',
    method: 'balanceOf',
    parameters: [
      ':userAddress'
    ],
    returnValueTest: {
      comparator: '>',
      value: '0'
    }
  }
]


export default function Home() {
  const [connected, setConnected] = useState()
  const { id } = useContext(UUIDContext)

  async function connect() {
    const resourceId = {
      baseUrl: 'http://localhost:3000',
      path: '/protected',
      orgId: "",
      role: "",
      extraData: id
    }

    const client = new LitJsSdk.LitNodeClient({ alertWhenUnauthorized: false })
    await client.connect()
    const authSig = await LitJsSdk.checkAndSignAuthMessage({chain: 'mumbai'})

    await client.saveSigningCondition({ accessControlConditions, chain: 'ethereum', authSig, resourceId })
    try {
      const jwt = await client.getSignedToken({
        accessControlConditions, chain: 'ethereum', authSig, resourceId: resourceId
      })
      Cookies.set('lit-auth', jwt, { expires: 1 })

    } catch (err) {
      console.log('error: ', err)
    }
    setConnected(true)

  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1>AstroFT</h1>
      {
        !connected && <button onClick={connect}>Connect</button>
      }
     
      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
          </span>
        </a>
      </footer>
    </div>
  )
}
